// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectField should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SelectField
    defaultText="Select"
    error=""
    onChange={[Function]}
    options={Array []}
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div>
        <select
          onChange={[Function]}
          style={
            Object {
              "padding": "10px",
              "width": "100%",
            }
          }
          value=""
        >
          <option
            value="Select"
          >
            Select
          </option>
        </select>
        
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <select
            onChange={[Function]}
            style={
              Object {
                "padding": "10px",
                "width": "100%",
              }
            }
            value=""
          >
            <option
              value="Select"
            >
              Select
            </option>
          </select>,
          "",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value="Select"
              >
                Select
              </option>,
              Array [],
            ],
            "onChange": [Function],
            "style": Object {
              "padding": "10px",
              "width": "100%",
            },
            "value": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "Select",
              "nodeType": "host",
              "props": Object {
                "children": "Select",
                "value": "Select",
              },
              "ref": null,
              "rendered": "Select",
              "type": "option",
            },
          ],
          "type": "select",
        },
        "",
      ],
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div>
          <select
            onChange={[Function]}
            style={
              Object {
                "padding": "10px",
                "width": "100%",
              }
            }
            value=""
          >
            <option
              value="Select"
            >
              Select
            </option>
          </select>
          
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <select
              onChange={[Function]}
              style={
                Object {
                  "padding": "10px",
                  "width": "100%",
                }
              }
              value=""
            >
              <option
                value="Select"
              >
                Select
              </option>
            </select>,
            "",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="Select"
                >
                  Select
                </option>,
                Array [],
              ],
              "onChange": [Function],
              "style": Object {
                "padding": "10px",
                "width": "100%",
              },
              "value": "",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "Select",
                "nodeType": "host",
                "props": Object {
                  "children": "Select",
                  "value": "Select",
                },
                "ref": null,
                "rendered": "Select",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "",
        ],
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
